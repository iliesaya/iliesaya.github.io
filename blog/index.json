[
    {
        "ref": "http://iliesaya.github.io/blog/tensorflow_riaps_jetson/",
        "title": "Tensorflow not initializing during riaps deployment",
        "section": "blog",
        "date" : "2019.09.08",
        "body": " Strange error cannot allocate memory in static TLS block under riaps plateform I am deploying on an nvidia Jetson Xavier a Tensorflow / Keras application (tensorflow-gpu==1.13.1+nv19.5).\nIf I launch my python code outside riaps, it\u0026rsquo;s working , no error. But when I deploy it with riaps_ctrl and launch it, here is the result :\n \u0026lt;class 'ImportError'\u0026gt;: Traceback (most recent call last): File \u0026quot;/usr/local/lib/python3.6/dist-packages/tensorflow/python/pywrap_tensorflow.py\u0026quot;, line 58, in \u0026lt;module\u0026gt; from tensorflow.python.pywrap_tensorflow_internal import * File \u0026quot;/usr/local/lib/python3.6/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py\u0026quot;, line 28, in \u0026lt;module\u0026gt; _pywrap_tensorflow_internal = swig_import_helper() File \u0026quot;/usr/local/lib/python3.6/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py\u0026quot;, line 24, in swig_import_helper _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description) File \u0026quot;/usr/lib/python3.6/imp.py\u0026quot;, line 243, in load_module return load_dynamic(name, filename, file) File \u0026quot;/usr/lib/python3.6/imp.py\u0026quot;, line 343, in load_dynamic return _load(spec) ImportError: /usr/lib/aarch64-linux-gnu/libgomp.so.1: cannot allocate memory in static TLS block Failed to load the native TensorFlow runtime. See https://www.tensorflow.org/install/errors for some common reasons and solutions. Include the entire stack trace above this error message when asking for help. Traceback (most recent call last): File \u0026quot;/usr/local/lib/python3.6/dist-packages/tensorflow/python/pywrap_tensorflow.py\u0026quot;, line 58, in \u0026lt;module\u0026gt; from tensorflow.python.pywrap_tensorflow_internal import * File \u0026quot;/usr/local/lib/python3.6/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py\u0026quot;, line 28, in \u0026lt;module\u0026gt; _pywrap_tensorflow_internal = swig_import_helper() File \u0026quot;/usr/local/lib/python3.6/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py\u0026quot;, line 24, in swig_import_helper _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description) File \u0026quot;/usr/lib/python3.6/imp.py\u0026quot;, line 243, in load_module return load_dynamic(name, filename, file) File \u0026quot;/usr/lib/python3.6/imp.py\u0026quot;, line 343, in load_dynamic return _load(spec) ImportError: /usr/lib/aarch64-linux-gnu/libgomp.so.1: cannot allocate memory in static TLS block  Impossible to update the jetson tensorflow version, because cudnn installed version is 7.3.1 and I don\u0026rsquo;t want to re-flash the device and lose all my riaps installation. If I use a more recent version of tensorflow I have this error:\nLoaded runtime CuDNN library: 7.3.1 but source was compiled with: 7.5.0  The solution I found is to move the Tensorflow include at the very top of the python code :\nimport tensorflow as tf from tensorflow import keras from tensorflow.keras.layers import GlobalAveragePooling2D, ZeroPadding2D, MaxPooling2D, Flatten, Dense, Input, Dropout, Conv2D, BatchNormalization, MaxPool2D, Activation from tensorflow.keras.models import Model, Sequential from tensorflow.keras.optimizers import Adam from tensorflow.keras.regularizers import l2 from tensorflow.keras.layers import MaxPooling1D, Conv1D, GlobalAveragePooling1D, Reshape from riaps.run.comp import Component import logging from random import random import time as t from time import mktime from datetime import datetime import numpy as np from sklearn import preprocessing from sklearn.preprocessing import normalize  If the import tensorflow are after the sklearn import, it\u0026rsquo;s not working. This page gave me the hint : https://www.mail-archive.com/python-devel@lists.fedoraproject.org/msg01516.html\nI think this bug is specific to the version of tensorflow I have on the jetson because the raspberry pi doesn\u0026rsquo;t have this issue.\n"
    }
]
